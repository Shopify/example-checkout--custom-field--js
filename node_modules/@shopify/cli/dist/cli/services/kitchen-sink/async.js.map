{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../src/cli/services/kitchen-sink/async.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,gBAAgB,EAAE,WAAW,EAAC,MAAM,0BAA0B,CAAA;AAItE,MAAM,CAAC,KAAK,UAAU,UAAU;IAC9B,mBAAmB;IACnB,IAAI,qBAAiC,CAAA;IAErC,MAAM,cAAc,GAAG,IAAI,OAAO,CAAO,UAAU,OAAO,EAAE,OAAO;QACjE,qBAAqB,GAAG,OAAO,CAAA;IACjC,CAAC,CAAC,CAAA;IAEF,MAAM,cAAc,GAAG;QACrB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,OAAiB,EAAE,OAAoB,EAAE,EAAE;YAC1E,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;YACrC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YACzD,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAA;YACtC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YACzD,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;YACrC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YAEzD,qBAAqB,EAAE,CAAA;QACzB,CAAC;KACF,CAAA;IAED,MAAM,eAAe,GAAG;QACtB,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,OAAiB,EAAE,OAAoB,EAAE,EAAE;YAC1E,MAAM,cAAc,CAAA;YAEpB,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAA;YACtC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YACzD,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAA;YACvC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YACzD,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAA;QACxC,CAAC;KACF,CAAA;IAED,MAAM,gBAAgB,CAAC;QACrB,SAAS,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;QAC5C,MAAM,EAAE;YACN,SAAS,EAAE;gBACT;oBACE,GAAG,EAAE,GAAG;oBACR,MAAM,EAAE,mBAAmB;iBAC5B;gBACD;oBACE,GAAG,EAAE,GAAG;oBACR,MAAM,EAAE,MAAM;iBACf;aACF;YACD,QAAQ,EAAE,kCAAkC;SAC7C;KACF,CAAC,CAAA;IAEF,cAAc;IACd,MAAM,KAAK,GAAG;QACZ;YACE,KAAK,EAAE,yBAAyB;YAChC,IAAI,EAAE,KAAK,IAAI,EAAE;gBACf,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YAC3D,CAAC;SACF;QACD;YACE,KAAK,EAAE,oBAAoB;YAC3B,IAAI,EAAE,KAAK,IAAI,EAAE;gBACf,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;YAC3D,CAAC;SACF;KACF,CAAA;IAED,MAAM,WAAW,CAAC,KAAK,CAAC,CAAA;AAC1B,CAAC","sourcesContent":["import {renderConcurrent, renderTasks} from '@shopify/cli-kit/node/ui'\nimport {AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {Writable} from 'stream'\n\nexport async function asyncTasks() {\n  // renderConcurrent\n  let backendPromiseResolve: () => void\n\n  const backendPromise = new Promise<void>(function (resolve, _reject) {\n    backendPromiseResolve = resolve\n  })\n\n  const backendProcess = {\n    prefix: 'backend',\n    action: async (stdout: Writable, _stderr: Writable, _signal: AbortSignal) => {\n      stdout.write('first backend message')\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      stdout.write('second backend message')\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      stdout.write('third backend message')\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      backendPromiseResolve()\n    },\n  }\n\n  const frontendProcess = {\n    prefix: 'frontend',\n    action: async (stdout: Writable, _stderr: Writable, _signal: AbortSignal) => {\n      await backendPromise\n\n      stdout.write('first frontend message')\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      stdout.write('second frontend message')\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      stdout.write('third frontend message')\n    },\n  }\n\n  await renderConcurrent({\n    processes: [backendProcess, frontendProcess],\n    footer: {\n      shortcuts: [\n        {\n          key: 'p',\n          action: 'open your browser',\n        },\n        {\n          key: 'q',\n          action: 'quit',\n        },\n      ],\n      subTitle: `Preview URL: https://shopify.com`,\n    },\n  })\n\n  // renderTasks\n  const tasks = [\n    {\n      title: 'Installing dependencies',\n      task: async () => {\n        await new Promise((resolve) => setTimeout(resolve, 2000))\n      },\n    },\n    {\n      title: 'Downloading assets',\n      task: async () => {\n        await new Promise((resolve) => setTimeout(resolve, 2000))\n      },\n    },\n  ]\n\n  await renderTasks(tasks)\n}\n"]}