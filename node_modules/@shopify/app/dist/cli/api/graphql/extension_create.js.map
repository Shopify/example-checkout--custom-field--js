{"version":3,"file":"extension_create.js","sourceRoot":"","sources":["../../../../src/cli/api/graphql/extension_create.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,GAAG,EAAC,MAAM,iBAAiB,CAAA;AAEnC,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;CAuBtC,CAAA","sourcesContent":["import {gql} from 'graphql-request'\n\nexport const ExtensionCreateQuery = gql`\n  mutation ExtensionCreate($apiKey: String!, $type: ExtensionType!, $title: String!, $config: JSON!, $context: String) {\n    extensionCreate(input: {apiKey: $apiKey, type: $type, title: $title, config: $config, context: $context}) {\n      extensionRegistration {\n        id\n        uuid\n        type\n        title\n        draftVersion {\n          registrationId\n          lastUserInteractionAt\n          validationErrors {\n            field\n            message\n          }\n        }\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport interface ExtensionCreateVariables {\n  apiKey: string\n  type: string\n  title: string\n  config: string\n  context?: string | null\n}\n\nexport interface ExtensionCreateSchema {\n  extensionCreate: {\n    extensionRegistration: {\n      id: string\n      uuid: string\n      type: string\n      title: string\n      draftVersion: {\n        registrationId: string\n        lastUserInteractionAt: string\n        validationErrors: {\n          field: string[]\n          message: string\n        }[]\n      }\n    }\n    userErrors: {\n      field: string[]\n      message: string\n    }[]\n  }\n}\n"]}