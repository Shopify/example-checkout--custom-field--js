{"version":3,"file":"upload.js","sourceRoot":"","sources":["../../../../src/cli/services/deploy/upload.ts"],"names":[],"mappings":"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","sourcesContent":["import {themeExtensionConfig as generateThemeExtensionConfig} from './theme-extension-config.js'\nimport {Identifiers, IdentifiersExtensions} from '../../models/app/identifiers.js'\nimport {FunctionExtension, ThemeExtension} from '../../models/app/extensions.js'\nimport {\n  UploadUrlGenerateMutation,\n  UploadUrlGenerateMutationSchema,\n} from '../../api/graphql/functions/upload_url_generate.js'\nimport {\n  ExtensionUpdateDraftInput,\n  ExtensionUpdateDraftMutation,\n  ExtensionUpdateSchema,\n} from '../../api/graphql/update_draft.js'\nimport {\n  CreateDeployment,\n  CreateDeploymentSchema,\n  CreateDeploymentVariables,\n  ExtensionSettings,\n} from '../../api/graphql/create_deployment.js'\nimport {\n  GenerateSignedUploadUrl,\n  GenerateSignedUploadUrlSchema,\n  GenerateSignedUploadUrlVariables,\n} from '../../api/graphql/generate_signed_upload_url.js'\nimport {\n  AppFunctionSetMutation,\n  AppFunctionSetMutationSchema,\n  AppFunctionSetVariables,\n} from '../../api/graphql/functions/app_function_set.js'\nimport {functionProxyRequest, partnersRequest} from '@shopify/cli-kit/node/api/partners'\nimport {randomUUID} from '@shopify/cli-kit/node/crypto'\nimport {ensureAuthenticatedPartners} from '@shopify/cli-kit/node/session'\nimport {fileExists, readFile, readFileSync} from '@shopify/cli-kit/node/fs'\nimport {fetch, formData} from '@shopify/cli-kit/node/http'\nimport {AbortError, BugError} from '@shopify/cli-kit/node/error'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n\ninterface DeployThemeExtensionOptions {\n  /** The application API key */\n  apiKey: string\n\n  /** Set of local identifiers */\n  identifiers: Identifiers\n\n  /** The token to send authenticated requests to the partners' API  */\n  token: string\n}\n\n/**\n * Uploads theme extension(s)\n * @param options - The upload options\n */\nexport async function uploadThemeExtensions(\n  themeExtensions: ThemeExtension[],\n  options: DeployThemeExtensionOptions,\n): Promise<void> {\n  const {apiKey, identifiers, token} = options\n  await Promise.all(\n    themeExtensions.map(async (themeExtension) => {\n      const themeExtensionConfig = await generateThemeExtensionConfig(themeExtension)\n      const themeId = identifiers.extensionIds[themeExtension.localIdentifier]!\n      const themeExtensionInput: ExtensionUpdateDraftInput = {\n        apiKey,\n        config: JSON.stringify(themeExtensionConfig),\n        context: undefined,\n        registrationId: themeId,\n      }\n      const mutation = ExtensionUpdateDraftMutation\n      const result: ExtensionUpdateSchema = await partnersRequest(mutation, token, themeExtensionInput)\n      if (result.extensionUpdateDraft?.userErrors?.length > 0) {\n        const errors = result.extensionUpdateDraft.userErrors.map((error) => error.message).join(', ')\n        throw new AbortError(errors)\n      }\n    }),\n  )\n}\n\ninterface UploadExtensionsBundleOptions {\n  /** The application API key */\n  apiKey: string\n\n  /** The path to the bundle file to be uploaded */\n  bundlePath: string\n\n  /** The token to send authenticated requests to the partners' API  */\n  token: string\n\n  /** Extensions extra data */\n  extensions: ExtensionSettings[]\n\n  /** Deployment label */\n  label?: string\n}\n\nexport interface UploadExtensionValidationError {\n  uuid: string\n  errors: {\n    message: string\n    field: string[]\n  }[]\n}\n\n/**\n * Uploads a bundle.\n * @param options - The upload options\n */\nexport async function uploadExtensionsBundle(\n  options: UploadExtensionsBundleOptions,\n): Promise<{validationErrors: UploadExtensionValidationError[]; deploymentId: number}> {\n  const deploymentUUID = randomUUID()\n  const signedURL = await getExtensionUploadURL(options.apiKey, deploymentUUID)\n\n  const form = formData()\n  const buffer = readFileSync(options.bundlePath)\n  form.append('my_upload', buffer)\n  await fetch(signedURL, {\n    method: 'put',\n    body: buffer,\n    headers: form.getHeaders(),\n  })\n\n  const variables: CreateDeploymentVariables = {\n    apiKey: options.apiKey,\n    uuid: deploymentUUID,\n    bundleUrl: signedURL,\n    extensions: options.extensions,\n    label: options.label,\n  }\n\n  const mutation = CreateDeployment\n  const result: CreateDeploymentSchema = await partnersRequest(mutation, options.token, variables)\n\n  if (result.deploymentCreate?.userErrors?.length > 0) {\n    const errors = result.deploymentCreate.userErrors.map((error) => error.message).join(', ')\n    throw new AbortError(errors)\n  }\n\n  const validationErrors = result.deploymentCreate.deployment.deployedVersions\n    .filter((ver) => ver.extensionVersion.validationErrors.length > 0)\n    .map((ver) => {\n      return {uuid: ver.extensionVersion.registrationUuid, errors: ver.extensionVersion.validationErrors}\n    })\n\n  return {validationErrors, deploymentId: result.deploymentCreate.deployment.id}\n}\n\n/**\n * It generates a URL to upload an app bundle.\n * @param apiKey - The application API key\n * @param deploymentUUID - The unique identifier of the deployment.\n */\nexport async function getExtensionUploadURL(apiKey: string, deploymentUUID: string) {\n  const mutation = GenerateSignedUploadUrl\n  const token = await ensureAuthenticatedPartners()\n  const variables: GenerateSignedUploadUrlVariables = {\n    apiKey,\n    deploymentUuid: deploymentUUID,\n    bundleFormat: 1,\n  }\n\n  const result: GenerateSignedUploadUrlSchema = await partnersRequest(mutation, token, variables)\n  if (result.deploymentGenerateSignedUploadUrl?.userErrors?.length > 0) {\n    const errors = result.deploymentGenerateSignedUploadUrl.userErrors.map((error) => error.message).join(', ')\n    throw new AbortError(errors)\n  }\n\n  return result.deploymentGenerateSignedUploadUrl.signedUploadUrl\n}\n\ninterface UploadFunctionExtensionsOptions {\n  /** The token to send authenticated requests to the partners' API  */\n  token: string\n\n  // Set of local identifiers\n  identifiers: Identifiers\n}\n\n/**\n * This function takes a list of function extensions and uploads them.\n * As part of the upload it creates a function server-side if it does not exist\n * and includes its remote identifier in the returned identifiers instance.\n * If the function already has a local id, that one is used and the upload\n * does an override of the function existing server-side.\n *\n * @param extensions - The list of extensions to upload.\n * @param options - Options to adjust the upload.\n * @returns A promise that resolves with the identifiers.\n */\nexport async function uploadFunctionExtensions(\n  extensions: FunctionExtension[],\n  options: UploadFunctionExtensionsOptions,\n): Promise<Identifiers> {\n  let identifiers = options.identifiers\n\n  const functionIds: IdentifiersExtensions = {}\n\n  // Functions are uploaded sequentially to avoid reaching the API limit\n  for (const extension of extensions) {\n    // eslint-disable-next-line no-await-in-loop\n    const remoteIdentifier = await uploadFunctionExtension(extension, {\n      apiKey: options.identifiers.app,\n      token: options.token,\n      identifier: identifiers.extensions[extension.localIdentifier],\n    })\n    functionIds[extension.localIdentifier] = remoteIdentifier\n  }\n\n  identifiers = {\n    ...identifiers,\n    extensions: {\n      ...identifiers.extensions,\n      ...functionIds,\n    },\n  }\n\n  return identifiers\n}\n\ninterface UploadFunctionExtensionOptions {\n  apiKey: string\n  identifier?: string\n  token: string\n}\n\nasync function uploadFunctionExtension(\n  extension: FunctionExtension,\n  options: UploadFunctionExtensionOptions,\n): Promise<string> {\n  const url = await uploadWasmBlob(extension, options.apiKey, options.token)\n\n  let inputQuery: string | undefined\n  if (await fileExists(extension.inputQueryPath)) {\n    inputQuery = await readFile(extension.inputQueryPath)\n  }\n\n  const query = AppFunctionSetMutation\n  const variables: AppFunctionSetVariables = {\n    // NOTE: This is a shim to support CLI projects that currently use the UUID instead of the ULID\n    ...(options.identifier?.includes('-') ? {legacyUuid: options.identifier} : {id: options.identifier}),\n    title: extension.configuration.name,\n    description: extension.configuration.description,\n    apiType: extension.configuration.type,\n    apiVersion: extension.configuration.apiVersion,\n    inputQuery,\n    inputQueryVariables: extension.configuration.input?.variables\n      ? {\n          singleJsonMetafield: extension.configuration.input.variables,\n        }\n      : undefined,\n    appBridge: extension.configuration.ui?.paths\n      ? {\n          detailsPath: extension.configuration.ui.paths.details,\n          createPath: extension.configuration.ui.paths.create,\n        }\n      : undefined,\n    enableCreationUi: extension.configuration.ui?.enable_create ?? true,\n    moduleUploadUrl: url,\n  }\n\n  const res: AppFunctionSetMutationSchema = await functionProxyRequest(options.apiKey, query, options.token, variables)\n  const userErrors = res.data.functionSet.userErrors ?? []\n  if (userErrors.length !== 0) {\n    const errorMessage = outputContent`The deployment of functions failed with the following errors:\n${outputToken.json(userErrors)}\n    `\n    throw new AbortError(errorMessage)\n  }\n  return res.data.functionSet.function?.id as string\n}\n\nasync function uploadWasmBlob(extension: FunctionExtension, apiKey: string, token: string): Promise<string> {\n  const {url, headers, maxSize} = await getFunctionExtensionUploadURL({apiKey, token})\n  headers['Content-Type'] = 'application/wasm'\n\n  const functionContent = await readFile(extension.buildWasmPath, {})\n  const res = await fetch(url, {body: functionContent, headers, method: 'PUT'})\n  const resBody = res.body?.read()?.toString() || ''\n\n  if (res.status === 200) {\n    return url\n  } else if (res.status === 400 && resBody.includes('EntityTooLarge')) {\n    const errorMessage = outputContent`The size of the Wasm binary file for Function ${extension.localIdentifier} is too large. It must be less than ${maxSize}.`\n    throw new AbortError(errorMessage)\n  } else if (res.status >= 400 && res.status < 500) {\n    const errorMessage = outputContent`Something went wrong uploading the Function ${\n      extension.localIdentifier\n    }. The server responded with status ${res.status.toString()} and body: ${resBody}`\n    throw new BugError(errorMessage)\n  } else {\n    const errorMessage = outputContent`Something went wrong uploading the Function ${extension.localIdentifier}. Try again.`\n    throw new AbortError(errorMessage)\n  }\n}\n\ninterface GetFunctionExtensionUploadURLOptions {\n  apiKey: string\n  token: string\n}\n\ninterface GetFunctionExtensionUploadURLOutput {\n  url: string\n  maxSize: string\n  headers: {[key: string]: string}\n}\n\nasync function getFunctionExtensionUploadURL(\n  options: GetFunctionExtensionUploadURLOptions,\n): Promise<GetFunctionExtensionUploadURLOutput> {\n  const res: UploadUrlGenerateMutationSchema = await functionProxyRequest(\n    options.apiKey,\n    UploadUrlGenerateMutation,\n    options.token,\n  )\n  return res.data.uploadUrlGenerate\n}\n"]}