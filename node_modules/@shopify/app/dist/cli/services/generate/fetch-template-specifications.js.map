{"version":3,"file":"fetch-template-specifications.js","sourceRoot":"","sources":["../../../../src/cli/services/generate/fetch-template-specifications.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,iCAAiC,GAElC,MAAM,8CAA8C,CAAA;AAErD,OAAO,EAAC,+BAA+B,EAAC,MAAM,oCAAoC,CAAA;AAClF,OAAO,EAAC,MAAM,EAAE,SAAS,EAAC,MAAM,oBAAoB,CAAA;AACpD,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAElE,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,KAAa;IAC7D,MAAM,MAAM,GAAuB,EAAC,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,aAAa,EAAC,CAAA;IACnF,MAAM,MAAM,GAA4C,MAAM,eAAe,CAC3E,iCAAiC,EACjC,KAAK,EACL,MAAM,CACP,CAAA;IACD,OAAO,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAA;AAC1E,CAAC;AAED,MAAM,UAAU,8BAA8B,CAC5C,2BAAwD;IAExD,OAAO;QACL,UAAU,EAAE,2BAA2B,CAAC,UAAU;QAClD,IAAI,EAAE,2BAA2B,CAAC,IAAI;QACtC,KAAK,EAAE,2BAA2B,CAAC,KAAK;QACxC,YAAY,EAAE,2BAA2B,CAAC,YAAY;QACtD,KAAK,EAAE,2BAA2B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;YACzD,OAAO;gBACL,UAAU,EAAE,2BAA2B,CAAC,UAAU;gBAClD,kBAAkB,EAAE,2BAA2B,CAAC,UAAU;gBAC1D,YAAY,EAAE,2BAA2B,CAAC,UAAU;gBACpD,KAAK,EAAE,KAAK;gBACZ,iBAAiB,EAAE,MAAM,CAAC,SAAS,CAAC,wBAAwB;gBAC5D,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;gBAC5C,KAAK,EAAE,2BAA2B,CAAC,KAAK;gBACxC,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU;gBAC1B,YAAY,EAAE,+BAA+B;gBAC7C,WAAW,EAAE,SAAS,CAAC,GAAG;gBAC1B,OAAO,EAAE,2BAA2B,CAAC,YAAY,CAAC,CAAC,CAAE;gBACrD,YAAY,EAAE,CAAC,MAAc,EAAE,EAAE;oBAC/B,MAAM,eAAe,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,KAAK,MAAM,CAAC,CAAA;oBAC9G,IAAI,CAAC,eAAe;wBAAE,OAAO,SAAS,CAAA;oBACtC,OAAO,eAAe,CAAC,IAAI,CAAA;gBAC7B,CAAC;aACF,CAAA;QACH,CAAC,CAAC;KACH,CAAA;AACH,CAAC","sourcesContent":["import {\n  RemoteTemplateSpecification,\n  RemoteTemplateSpecificationsQuery,\n  RemoteTemplateSpecificationsQuerySchema,\n} from '../../api/graphql/template_specifications.js'\nimport {TemplateSpecification} from '../../models/app/template.js'\nimport {BaseFunctionConfigurationSchema} from '../../models/extensions/schemas.js'\nimport {blocks, templates} from '../../constants.js'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\n\nexport async function fetchTemplateSpecifications(token: string): Promise<TemplateSpecification[]> {\n  const params: {version?: string} = {version: templates.specification.remoteVersion}\n  const result: RemoteTemplateSpecificationsQuerySchema = await partnersRequest(\n    RemoteTemplateSpecificationsQuery,\n    token,\n    params,\n  )\n  return result.templateSpecifications.map(mapRemoteTemplateSpecification)\n}\n\nexport function mapRemoteTemplateSpecification(\n  remoteTemplateSpecification: RemoteTemplateSpecification,\n): TemplateSpecification {\n  return {\n    identifier: remoteTemplateSpecification.identifier,\n    name: remoteTemplateSpecification.name,\n    group: remoteTemplateSpecification.group,\n    supportLinks: remoteTemplateSpecification.supportLinks,\n    types: remoteTemplateSpecification.types.map((extension) => {\n      return {\n        identifier: remoteTemplateSpecification.identifier,\n        externalIdentifier: remoteTemplateSpecification.identifier,\n        externalName: remoteTemplateSpecification.identifier,\n        gated: false,\n        registrationLimit: blocks.functions.defaultRegistrationLimit,\n        supportedFlavors: extension.supportedFlavors,\n        group: remoteTemplateSpecification.group,\n        category: () => 'function',\n        configSchema: BaseFunctionConfigurationSchema,\n        templateURL: extension.url,\n        helpURL: remoteTemplateSpecification.supportLinks[0]!,\n        templatePath: (flavor: string) => {\n          const supportedFlavor = extension.supportedFlavors.find((supportedFlavor) => supportedFlavor.value === flavor)\n          if (!supportedFlavor) return undefined\n          return supportedFlavor.path\n        },\n      }\n    }),\n  }\n}\n"]}