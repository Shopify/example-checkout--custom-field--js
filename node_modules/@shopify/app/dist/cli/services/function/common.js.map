{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../src/cli/services/function/common.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,IAAI,IAAI,OAAO,EAAC,MAAM,4BAA4B,CAAA;AAC1D,OAAO,EAAC,4BAA4B,EAAC,MAAM,2CAA2C,CAAA;AAGtF,OAAO,EAAC,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACrE,OAAO,EAAC,gBAAgB,EAAC,MAAM,0BAA0B,CAAA;AACzD,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAS,KAAK,EAAC,MAAM,aAAa,CAAA;AACzC,OAAO,EAAC,UAAU,EAAC,MAAM,0BAA0B,CAAA;AAEnD,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;QACjB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,sCAAsC;QACnD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QAC1C,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,GAAG,EAAE;QAC1B,GAAG,EAAE,mBAAmB;KACzB,CAAC;CACH,CAAA;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB,CACrC,MAAc,EACd,IAAY,EACZ,QAAqE;IAErE,MAAM,cAAc,GAAG,MAAM,4BAA4B,CAAC,MAAM,CAAC,CAAA;IACjE,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,EAAC,cAAc,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAA;IAE1E,MAAM,WAAW,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,CAAA;IACjF,IAAI,WAAW,EAAE;QACf,OAAO,QAAQ,CAAC,GAAG,EAAE,WAAW,CAAC,CAAA;KAClC;SAAM;QACL,gBAAgB,CACd,IAAI,UAAU,CAAC,6FAA6F,CAAC,CAC9G,CAAA;KACF;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mCAAmC,CACvD,aAA2B,EAC3B,eAAqC,EACrC,mBAA2B;IAE3B,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,CAAA;IAChE,MAAM,MAAM,GAAG,QAAQ,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAA;IAC1D,IAAI,CAAC,CAAC,MAAM,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE;QAC/B,MAAM,IAAI,UAAU,CAAC,gBAAgB,aAAa,CAAC,YAAY,0BAA0B,eAAe,EAAE,CAAC,CAAA;KAC5G;IACD,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {FunctionExtension} from '../../models/app/extensions.js'\nimport {App, AppInterface} from '../../models/app/app.js'\nimport {load as loadApp} from '../../models/app/loader.js'\nimport {loadExtensionsSpecifications} from '../../models/extensions/specifications.js'\nimport {FunctionSpec} from '../../models/extensions/functions.js'\nimport {ExtensionFlavorValue} from '../generate/extension.js'\nimport {resolvePath, cwd, joinPath} from '@shopify/cli-kit/node/path'\nimport {renderFatalError} from '@shopify/cli-kit/node/ui'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {Config, Flags} from '@oclif/core'\nimport {fileExists} from '@shopify/cli-kit/node/fs'\n\nexport const functionFlags = {\n  path: Flags.string({\n    hidden: false,\n    description: 'The path to your function directory.',\n    parse: async (input) => resolvePath(input),\n    default: async () => cwd(),\n    env: 'SHOPIFY_FLAG_PATH',\n  }),\n}\n\nexport async function inFunctionContext(\n  config: Config,\n  path: string,\n  callback: (app: App, ourFunction: FunctionExtension) => Promise<void>,\n) {\n  const specifications = await loadExtensionsSpecifications(config)\n  const app: AppInterface = await loadApp({specifications, directory: path})\n\n  const ourFunction = app.extensions.function.find((fun) => fun.directory === path)\n  if (ourFunction) {\n    return callback(app, ourFunction)\n  } else {\n    renderFatalError(\n      new AbortError('Run this command from a function directory or use `--path` to specify a function directory.'),\n    )\n  }\n}\n\nexport async function ensureFunctionExtensionFlavorExists(\n  specification: FunctionSpec,\n  extensionFlavor: ExtensionFlavorValue,\n  templateDownloadDir: string,\n): Promise<string> {\n  const templatePath = specification.templatePath(extensionFlavor)\n  const origin = joinPath(templateDownloadDir, templatePath)\n  if (!(await fileExists(origin))) {\n    throw new AbortError(`\\nExtension '${specification.externalName}' is not available for ${extensionFlavor}`)\n  }\n  return origin\n}\n"]}