{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../src/cli/services/deploy.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable require-atomic-updates */\nimport {\n  UploadExtensionValidationError,\n  uploadFunctionExtensions,\n  uploadThemeExtensions,\n  uploadExtensionsBundle,\n} from './deploy/upload.js'\n\nimport {ensureDeployContext} from './context.js'\nimport {bundleAndBuildExtensions} from './deploy/bundle.js'\nimport {fetchAppExtensionRegistrations} from './dev/fetch.js'\nimport {AppInterface} from '../models/app/app.js'\nimport {Identifiers, updateAppIdentifiers} from '../models/app/identifiers.js'\nimport {Extension} from '../models/app/extensions.js'\nimport {OrganizationApp} from '../models/organization.js'\nimport {validateExtensions} from '../validators/extensions.js'\nimport {AllAppExtensionRegistrationsQuerySchema} from '../api/graphql/all_app_extension_registrations.js'\nimport {renderInfo, renderSuccess, renderTasks, renderTextPrompt} from '@shopify/cli-kit/node/ui'\nimport {inTemporaryDirectory, mkdir} from '@shopify/cli-kit/node/fs'\nimport {joinPath, dirname} from '@shopify/cli-kit/node/path'\nimport {outputNewline, outputInfo} from '@shopify/cli-kit/node/output'\nimport {useThemebundling} from '@shopify/cli-kit/node/context/local'\nimport type {AlertCustomSection, Task} from '@shopify/cli-kit/node/ui'\n\ninterface DeployOptions {\n  /** The app to be built and uploaded */\n  app: AppInterface\n\n  /** API key of the app in Partners admin */\n  apiKey?: string\n\n  /** If true, ignore any cached appId or extensionId */\n  reset: boolean\n\n  /** If true, proceed with deploy without asking for confirmation */\n  force: boolean\n\n  /** The deployment label */\n  label?: string\n}\n\ninterface TasksContext {\n  bundlePath?: string\n  bundle?: boolean\n}\n\nexport async function deploy(options: DeployOptions) {\n  if (!options.app.hasExtensions()) {\n    renderInfo({headline: 'No extensions to deploy to Shopify Partners yet.'})\n    return\n  }\n\n  // eslint-disable-next-line prefer-const\n  let {app, identifiers, partnersApp, token, organization} = await ensureDeployContext(options)\n  const apiKey = identifiers.app\n\n  let label: string | undefined\n\n  // if the command is run using a partnersToken then it is not possible to fetch the organization  In that case the new\n  // appUiDeployments flow is not triggered even if the org has the beta flag enabled. This should be fixed in the\n  // partners server side.\n  if (organization?.betas.appUiDeployments) {\n    label =\n      options.label ??\n      (await renderTextPrompt({\n        message: 'Deployment label',\n        allowEmpty: true,\n      }))\n\n    if (label.length === 0) {\n      label = undefined\n    }\n  }\n\n  outputNewline()\n  outputInfo(`Deploying your work to Shopify Partners. It will be part of ${partnersApp.title}`)\n  outputNewline()\n\n  const extensions = await Promise.all(\n    options.app.extensions.ui.map(async (extension) => {\n      return {\n        uuid: identifiers.extensions[extension.localIdentifier]!,\n        config: JSON.stringify(await extension.deployConfig()),\n        context: '',\n      }\n    }),\n  )\n  if (useThemebundling()) {\n    const themeExtensions = await Promise.all(\n      options.app.extensions.theme.map(async (extension) => {\n        return {\n          uuid: identifiers.extensions[extension.localIdentifier]!,\n          config: '{\"theme_extension\": {\"files\": {}}}',\n          context: '',\n        }\n      }),\n    )\n    extensions.push(...themeExtensions)\n  }\n\n  let registrations: AllAppExtensionRegistrationsQuerySchema\n  let validationErrors: UploadExtensionValidationError[] = []\n  let deploymentId: number\n\n  await inTemporaryDirectory(async (tmpDir) => {\n    try {\n      const bundlePath = joinPath(tmpDir, `bundle.zip`)\n      await mkdir(dirname(bundlePath))\n      const bundleTheme = useThemebundling() && app.extensions.theme.length !== 0\n      const bundleUI = app.extensions.ui.length !== 0\n      const bundle = bundleTheme || bundleUI\n      await bundleAndBuildExtensions({app, bundlePath, identifiers, bundle})\n\n      const tasks: Task<TasksContext>[] = [\n        {\n          title: 'Running validation',\n          task: async () => {\n            await validateExtensions(app)\n          },\n        },\n        {\n          title: organization?.betas.appUiDeployments ? 'Creating deployment' : 'Pushing your code to Shopify',\n          task: async () => {\n            if (bundle) {\n              ;({validationErrors, deploymentId} = await uploadExtensionsBundle({\n                apiKey,\n                bundlePath,\n                extensions,\n                token,\n                label,\n              }))\n            }\n\n            if (!useThemebundling()) {\n              await uploadThemeExtensions(options.app.extensions.theme, {apiKey, identifiers, token})\n            }\n\n            identifiers = await uploadFunctionExtensions(app.extensions.function, {identifiers, token})\n            app = await updateAppIdentifiers({app, identifiers, command: 'deploy'})\n            registrations = await fetchAppExtensionRegistrations({token, apiKey: identifiers.app})\n          },\n        },\n      ]\n\n      await renderTasks(tasks)\n\n      await outputCompletionMessage({\n        app,\n        partnersApp,\n        partnersOrganizationId: partnersApp.organizationId,\n        identifiers,\n        registrations,\n        validationErrors,\n        deploymentId,\n        unifiedDeployment: organization?.betas.appUiDeployments ?? false,\n      })\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      /**\n       * If deployment fails when uploading we want the identifiers to be persisted\n       * for the next run.\n       */\n      await updateAppIdentifiers({app, identifiers, command: 'deploy'})\n      throw error\n    }\n  })\n}\n\nasync function outputCompletionMessage({\n  app,\n  partnersApp,\n  partnersOrganizationId,\n  identifiers,\n  registrations,\n  validationErrors,\n  deploymentId,\n  unifiedDeployment,\n}: {\n  app: AppInterface\n  partnersApp: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'>\n  partnersOrganizationId: string\n  identifiers: Identifiers\n  registrations: AllAppExtensionRegistrationsQuerySchema\n  validationErrors: UploadExtensionValidationError[]\n  deploymentId: number\n  unifiedDeployment: boolean\n}) {\n  if (unifiedDeployment) {\n    return renderSuccess({\n      headline: 'Deployment created',\n      body: {\n        link: {\n          url: `https://partners.shopify.com/${partnersOrganizationId}/apps/${partnersApp.id}/deployments/${deploymentId}`,\n          label: `Deployment ${deploymentId}`,\n        },\n      },\n      nextSteps: ['Publish your deployment to make your changes go live for merchants'],\n    })\n  }\n\n  let headline: string\n\n  if (validationErrors.length > 0) {\n    headline = 'Deployed to Shopify, but fixes are needed.'\n  } else {\n    headline = 'Deployed to Shopify!'\n  }\n\n  const outputDeployedButNotLiveMessage = (extension: Extension) => {\n    const result = [`${extension.localIdentifier} is deployed to Shopify but not yet live`]\n    const uuid = identifiers.extensions[extension.localIdentifier]\n    const validationError = validationErrors.find((error) => error.uuid === uuid)\n\n    if (validationError) {\n      result.push('\\n- Validation errors found in your extension toml file')\n      validationError.errors.forEach((err) => {\n        result.push(`\\n  └ ${err.message}`)\n      })\n    }\n\n    return result\n  }\n\n  const outputDeployedAndLivedMessage = (extension: Extension) => {\n    return `${extension.localIdentifier} is live`\n  }\n\n  const outputNextStep = async (extension: Extension) => {\n    const extensionId =\n      registrations.app.extensionRegistrations.find((registration) => {\n        return registration.uuid === identifiers.extensions[extension.localIdentifier]\n      })?.id ?? ''\n    return [\n      'Publish',\n      {\n        link: {\n          url: await extension.publishURL({orgId: partnersOrganizationId, appId: partnersApp.id, extensionId}),\n          label: extension.localIdentifier,\n        },\n      },\n    ]\n  }\n\n  const customSections: AlertCustomSection[] = [\n    {\n      title: 'Summary',\n      body: {\n        list: {\n          items: [\n            ...app.extensions.ui.map(outputDeployedButNotLiveMessage),\n            ...app.extensions.theme.map(outputDeployedButNotLiveMessage),\n            ...app.extensions.function.map(outputDeployedAndLivedMessage),\n          ],\n        },\n      },\n    },\n  ]\n\n  if (app.extensions.ui.length !== 0 || app.extensions.theme.length !== 0) {\n    customSections.push({\n      title: 'Next steps',\n      body: {\n        list: {\n          items: await Promise.all([...app.extensions.ui, ...app.extensions.theme].map(outputNextStep)),\n        },\n      },\n    })\n  }\n\n  renderSuccess({\n    headline,\n    customSections,\n  })\n}\n"]}