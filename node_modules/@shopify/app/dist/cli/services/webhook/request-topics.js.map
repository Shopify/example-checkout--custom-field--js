{"version":3,"file":"request-topics.js","sourceRoot":"","sources":["../../../../src/cli/services/webhook/request-topics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAMlE,MAAM,cAAc,GAAG;;;;CAItB,CAAA;AAED;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa,EAAE,UAAkB;IACnE,MAAM,SAAS,GAAG,EAAC,WAAW,EAAE,UAAU,EAAC,CAAA;IAC3C,MAAM,EAAC,aAAa,EAAE,MAAM,EAAC,GAAwB,MAAM,eAAe,CAAC,cAAc,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;IAE5G,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {partnersRequest} from '@shopify/cli-kit/node/api/partners'\n\nexport interface WebhookTopicsSchema {\n  webhookTopics: string[]\n}\n\nconst getTopicsQuery = `\n  query getWebhookTopics($api_version: String!) {\n    webhookTopics(apiVersion: $api_version)\n  }\n`\n\n/**\n * Requests topics for an api-version in order to validate flags or present a list of options\n *\n * @param token - Partners session token\n * @param apiVersion - ApiVersion of the topics\n * @returns - Available webhook topics for the api-version\n */\nexport async function requestTopics(token: string, apiVersion: string): Promise<string[]> {\n  const variables = {api_version: apiVersion}\n  const {webhookTopics: result}: WebhookTopicsSchema = await partnersRequest(getTopicsQuery, token, variables)\n\n  return result\n}\n"]}