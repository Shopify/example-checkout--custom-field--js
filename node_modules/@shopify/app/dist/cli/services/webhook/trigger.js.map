{"version":3,"file":"trigger.js","sourceRoot":"","sources":["../../../../src/cli/services/webhook/trigger.ts"],"names":[],"mappings":"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","sourcesContent":["import {DELIVERY_METHOD, parseAddressAndMethod, parseVersionAndTopic, WebhookTriggerFlags} from './trigger-flags.js'\nimport {getWebhookSample, UserErrors} from './request-sample.js'\nimport {triggerLocalWebhook} from './trigger-local-webhook.js'\nimport {\n  collectAddressAndMethod,\n  collectApiKey,\n  collectApiVersion,\n  collectCredentials,\n  collectTopic,\n} from './trigger-options.js'\nimport {ensureAuthenticatedPartners} from '@shopify/cli-kit/node/session'\nimport {consoleError, outputSuccess} from '@shopify/cli-kit/node/output'\n\ninterface WebhookTriggerOptions {\n  topic: string\n  apiVersion: string\n  deliveryMethod: string\n  address: string\n  clientSecret: string\n  apiKey?: string\n}\n\n/**\n * Orchestrates the command request by collecting params, requesting the sample, and sending it to localhost if\n * required.\n * It outputs the result\n *\n * @param flags - Passed flags\n */\nexport async function webhookTriggerService(flags: WebhookTriggerFlags) {\n  // Validation and collection of flags\n  const [token, validFlags] = await validatedFlags(flags)\n\n  // Request of prompts for missing flags\n  const options: WebhookTriggerOptions = await collectMissingFlags(token, validFlags)\n\n  await sendSample(token, options)\n}\n\nasync function validatedFlags(flags: WebhookTriggerFlags): Promise<[string, WebhookTriggerFlags]> {\n  const [deliveryMethod, address] = parseAddressAndMethod(flags)\n\n  const token = await ensureAuthenticatedPartners()\n  const [apiVersion, topic] = await parseVersionAndTopic(token, flags)\n\n  let clientSecret\n  if (isValueSet(flags.clientSecret)) {\n    // Flag overwrites any other secret\n    clientSecret = flags.clientSecret as string\n  }\n\n  return [\n    token,\n    {\n      topic,\n      apiVersion,\n      deliveryMethod,\n      address,\n      clientSecret,\n    },\n  ]\n}\n\nasync function collectMissingFlags(token: string, flags: WebhookTriggerFlags): Promise<WebhookTriggerOptions> {\n  const apiVersion = await collectApiVersion(token, flags.apiVersion)\n\n  const topic = await collectTopic(token, apiVersion, flags.topic)\n\n  const [deliveryMethod, address] = await collectAddressAndMethod(flags.deliveryMethod, flags.address)\n\n  const clientCredentials = await collectCredentials(token, flags.clientSecret)\n\n  const options: WebhookTriggerOptions = {\n    topic,\n    apiVersion,\n    deliveryMethod,\n    address,\n    clientSecret: clientCredentials.clientSecret as string,\n  }\n\n  if (deliveryMethod === DELIVERY_METHOD.EVENTBRIDGE) {\n    if (isValueSet(clientCredentials.apiKey)) {\n      options.apiKey = clientCredentials.apiKey\n    } else {\n      options.apiKey = await collectApiKey(token)\n    }\n  }\n\n  return options\n}\n\nexport function isValueSet(value: string | undefined): boolean {\n  if (value === undefined) {\n    return false\n  }\n\n  return value.length > 0\n}\n\nasync function sendSample(token: string, options: WebhookTriggerOptions) {\n  let sample\n  if (options.apiKey === undefined) {\n    sample = await getWebhookSample(\n      token,\n      options.topic,\n      options.apiVersion,\n      options.deliveryMethod,\n      options.address,\n      options.clientSecret,\n    )\n  } else {\n    sample = await getWebhookSample(\n      token,\n      options.topic,\n      options.apiVersion,\n      options.deliveryMethod,\n      options.address,\n      options.clientSecret,\n      options.apiKey,\n    )\n  }\n\n  if (!sample.success) {\n    consoleError(`Request errors:\\n${formatErrors(sample.userErrors)}`)\n    return\n  }\n\n  if (options.deliveryMethod === DELIVERY_METHOD.LOCALHOST) {\n    const result = await triggerLocalWebhook(options.address, sample.samplePayload, sample.headers)\n\n    if (result) {\n      outputSuccess('Localhost delivery sucessful')\n      return\n    }\n\n    consoleError('Localhost delivery failed')\n    return\n  }\n\n  if (sample.samplePayload === JSON.stringify({})) {\n    outputSuccess('Webhook has been enqueued for delivery')\n  }\n}\n\nfunction formatErrors(errors: UserErrors[]): string {\n  try {\n    return errors\n      .map((element) =>\n        JSON.parse(element.message)\n          .map((msg: string) => `  Â· ${msg}`)\n          .join('\\n'),\n      )\n      .join('\\n')\n    // eslint-disable-next-line no-catch-all/no-catch-all\n  } catch (err) {\n    return JSON.stringify(errors)\n  }\n}\n"]}