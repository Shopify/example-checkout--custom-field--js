{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/services/build.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAE,sBAAsB,EAAE,iBAAiB,EAAC,MAAM,sBAAsB,CAAA;AACpG,OAAO,QAAQ,MAAM,UAAU,CAAA;AAC/B,OAAO,EAAC,sBAAsB,EAAC,MAAM,mBAAmB,CAAA;AAExD,OAAO,EAAC,gBAAgB,EAAE,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAUxE,KAAK,UAAU,KAAK,CAAC,OAAqB;IACxC,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE;QACzC,MAAM,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;KAC1C;IAED,MAAM,GAAG,GAA+B,EAAE,CAAA;IAC1C,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,MAAM,CAAA;KACrC;IAED,MAAM,gBAAgB,CAAC;QACrB,SAAS,EAAE;YACT,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACnC,OAAO;oBACL,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI;oBAC9B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAmB,EAAE,EAAE;wBACxE,MAAM,QAAQ,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;oBAC7D,CAAC;iBACF,CAAA;YACH,CAAC,CAAC;YACF;gBACE,MAAM,EAAE,kBAAkB;gBAC1B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAmB,EAAE,EAAE;oBACxE,MAAM,oBAAoB,CAAC;wBACzB,GAAG,EAAE,OAAO,CAAC,GAAG;wBAChB,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK;wBACxC,MAAM;wBACN,MAAM;wBACN,MAAM;qBACP,CAAC,CAAA;gBACJ,CAAC;aACF;YACD,GAAG,CAAC,MAAM,iBAAiB,CAAC,EAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC;YAChD,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,EAAE;gBAC3D,OAAO;oBACL,MAAM,EAAE,iBAAiB,CAAC,eAAe;oBACzC,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAmB,EAAE,EAAE;wBACxE,MAAM,sBAAsB,CAAC,iBAAiB,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAA;oBAC7F,CAAC;iBACF,CAAA;YACH,CAAC,CAAC;SACH;QACD,cAAc,EAAE,KAAK;KACtB,CAAC,CAAA;IAEF,aAAa,CAAC,EAAC,QAAQ,EAAE,CAAC,EAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,QAAQ,CAAC,EAAC,CAAC,CAAA;AACtE,CAAC;AAED,eAAe,KAAK,CAAA","sourcesContent":["import {buildThemeExtensions, buildFunctionExtension, buildUIExtensions} from './build/extension.js'\nimport buildWeb from './web.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {AppInterface, Web} from '../models/app/app.js'\nimport {renderConcurrent, renderSuccess} from '@shopify/cli-kit/node/ui'\nimport {AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {Writable} from 'stream'\n\ninterface BuildOptions {\n  app: AppInterface\n  skipDependenciesInstallation: boolean\n  apiKey?: string\n}\n\nasync function build(options: BuildOptions) {\n  if (!options.skipDependenciesInstallation) {\n    await installAppDependencies(options.app)\n  }\n\n  const env: {SHOPIFY_API_KEY?: string} = {}\n  if (options.apiKey) {\n    env.SHOPIFY_API_KEY = options.apiKey\n  }\n\n  await renderConcurrent({\n    processes: [\n      ...options.app.webs.map((web: Web) => {\n        return {\n          prefix: web.configuration.type,\n          action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n            await buildWeb('build', {web, stdout, stderr, signal, env})\n          },\n        }\n      }),\n      {\n        prefix: 'theme_extensions',\n        action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n          await buildThemeExtensions({\n            app: options.app,\n            extensions: options.app.extensions.theme,\n            stdout,\n            stderr,\n            signal,\n          })\n        },\n      },\n      ...(await buildUIExtensions({app: options.app})),\n      ...options.app.extensions.function.map((functionExtension) => {\n        return {\n          prefix: functionExtension.localIdentifier,\n          action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n            await buildFunctionExtension(functionExtension, {stdout, stderr, signal, app: options.app})\n          },\n        }\n      }),\n    ],\n    showTimestamps: false,\n  })\n\n  renderSuccess({headline: [{userInput: options.app.name}, 'built!']})\n}\n\nexport default build\n"]}