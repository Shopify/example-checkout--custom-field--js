{"version":3,"file":"middlewares.js","sourceRoot":"","sources":["../../../../../../src/cli/services/dev/extension/server/middlewares.ts"],"names":[],"mappings":"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","sourcesContent":["import {getExtensionPointRedirectUrl, getExtensionUrl, getRedirectUrl, sendError} from './utilities.js'\nimport {GetExtensionsMiddlewareOptions} from './models.js'\nimport {getUIExtensionPayload} from '../payload.js'\nimport {getHTML} from '../templates.js'\nimport {fileExists, isDirectory, readFile, findPathUp} from '@shopify/cli-kit/node/fs'\nimport {IncomingMessage, ServerResponse, sendRedirect, send} from 'h3'\nimport {joinPath, extname, moduleDirectory} from '@shopify/cli-kit/node/path'\nimport {outputDebug} from '@shopify/cli-kit/node/output'\n\nexport function corsMiddleware(request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) {\n  response.setHeader('Access-Control-Allow-Origin', '*')\n  response.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS')\n  response.setHeader(\n    'Access-Control-Allow-Headers',\n    'Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, ngrok-skip-browser-warning',\n  )\n  next()\n}\n\nexport function noCacheMiddleware(request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) {\n  response.setHeader('Cache-Control', 'no-cache')\n  next()\n}\n\nexport async function redirectToDevConsoleMiddleware(\n  request: IncomingMessage,\n  response: ServerResponse,\n  next: (err?: Error) => unknown,\n) {\n  await sendRedirect(response.event, '/extensions/dev-console', 307)\n}\n\nexport async function fileServerMiddleware(\n  request: IncomingMessage,\n  response: ServerResponse,\n  next: (err?: Error) => unknown,\n  options: {filePath: string},\n) {\n  let {filePath} = options\n\n  if (await isDirectory(filePath)) {\n    filePath += filePath.endsWith('/') ? `index.html` : '/index.html'\n  }\n\n  const exists = await fileExists(filePath)\n\n  if (!exists) {\n    return sendError(response, {statusCode: 404, statusMessage: `Not Found: ${filePath}`})\n  }\n\n  const fileContent = await readFile(filePath)\n  const extensionToContent = {\n    '.ico': 'image/x-icon',\n    '.html': 'text/html',\n    '.js': 'text/javascript',\n    '.json': 'application/json',\n    '.css': 'text/css',\n    '.png': 'image/png',\n    '.jpg': 'image/jpeg',\n    '.wav': 'audio/wav',\n    '.mp3': 'audio/mpeg',\n    '.svg': 'image/svg+xml',\n    '.pdf': 'application/pdf',\n    '.doc': 'application/msword',\n  } as const\n\n  const extensionName = extname(filePath) as keyof typeof extensionToContent\n  const contentType = extensionToContent[extensionName] || 'text/plain'\n\n  response.setHeader('Content-Type', contentType)\n  response.writeHead(200)\n  response.end(fileContent)\n}\n\nexport function getExtensionAssetMiddleware({devOptions}: GetExtensionsMiddlewareOptions) {\n  return async (request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) => {\n    const {extensionId, assetPath} = request.context.params\n    const extension = devOptions.extensions.find((extension) => extension.devUUID === extensionId)\n\n    if (!extension) {\n      return sendError(response, {\n        statusCode: 404,\n        statusMessage: `Extension with id ${extensionId} not found`,\n      })\n    }\n\n    const buildDirectory = extension.outputBundlePath.replace('main.js', '')\n\n    return fileServerMiddleware(request, response, next, {\n      filePath: joinPath(buildDirectory, assetPath),\n    })\n  }\n}\n\nexport function getExtensionsPayloadMiddleware({payloadStore}: GetExtensionsMiddlewareOptions) {\n  return async (request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) => {\n    response.setHeader('content-type', 'application/json')\n    response.end(JSON.stringify(payloadStore.getRawPayload()))\n  }\n}\n\nexport async function devConsoleIndexMiddleware(\n  request: IncomingMessage,\n  response: ServerResponse,\n  next: (err?: Error) => unknown,\n) {\n  const rootDirectory = await findPathUp(joinPath('assets', 'dev-console'), {\n    type: 'directory',\n    cwd: moduleDirectory(import.meta.url),\n  })\n\n  if (!rootDirectory) {\n    return sendError(response, {\n      statusCode: 404,\n      statusMessage: `Could not find root directory for dev console`,\n    })\n  }\n\n  return fileServerMiddleware(request, response, next, {\n    filePath: rootDirectory,\n  })\n}\n\nexport async function devConsoleAssetsMiddleware(\n  request: IncomingMessage,\n  response: ServerResponse,\n  next: (err?: Error) => unknown,\n) {\n  const {assetPath} = request.context.params\n\n  const rootDirectory = await findPathUp(joinPath('assets', 'dev-console', 'extensions', 'dev-console', 'assets'), {\n    type: 'directory',\n    cwd: moduleDirectory(import.meta.url),\n  })\n\n  if (!rootDirectory) {\n    return sendError(response, {\n      statusCode: 404,\n      statusMessage: `Could not find root directory for dev console asset`,\n    })\n  }\n\n  return fileServerMiddleware(request, response, next, {\n    filePath: joinPath(rootDirectory, assetPath),\n  })\n}\n\nexport function getLogMiddleware({devOptions}: GetExtensionsMiddlewareOptions) {\n  return async (request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) => {\n    outputDebug(`UI extensions server received a ${request.method} request to URL ${request.url}`, devOptions.stdout)\n    next()\n  }\n}\n\nexport function getExtensionPayloadMiddleware({devOptions}: GetExtensionsMiddlewareOptions) {\n  return async (request: IncomingMessage, response: ServerResponse, next: (err?: Error) => unknown) => {\n    const extensionID = request.context.params.extensionId\n    const extension = devOptions.extensions.find((extension) => extension.devUUID === extensionID)\n\n    if (!extension) {\n      return sendError(response, {\n        statusCode: 404,\n        statusMessage: `Extension with id ${extensionID} not found`,\n      })\n    }\n\n    if (request.headers.accept?.startsWith('text/html')) {\n      if (extension.type === 'checkout_post_purchase') {\n        const body = await getHTML({\n          data: {\n            url: getExtensionUrl(extension, devOptions),\n          },\n          template: 'index',\n          extensionSurface: 'post_purchase',\n        })\n        await send(response.event, body)\n        return\n      } else {\n        const url = getRedirectUrl(extension, devOptions)\n        await sendRedirect(response.event, url, 307)\n        return\n      }\n    }\n\n    response.setHeader('content-type', 'application/json')\n    response.end(\n      JSON.stringify({\n        app: {\n          apiKey: devOptions.apiKey,\n        },\n        version: '3',\n        root: {\n          url: new URL('/extensions', devOptions.url).toString(),\n        },\n        socket: {\n          url: getWebsocketUrl(devOptions),\n        },\n        devConsole: {\n          url: new URL('/extensions/dev-console', devOptions.url).toString(),\n        },\n        store: devOptions.storeFqdn,\n        extension: await getUIExtensionPayload(extension, devOptions),\n      }),\n    )\n  }\n}\n\nexport function getExtensionPointMiddleware({devOptions}: GetExtensionsMiddlewareOptions) {\n  return async (request: IncomingMessage, response: ServerResponse, _next: (err?: Error) => unknown) => {\n    const extensionID = request.context.params.extensionId\n    const requestedTarget = request.context.params.extensionPointTarget\n    const extension = devOptions.extensions.find((extension) => extension.devUUID === extensionID)\n\n    if (!extension) {\n      return sendError(response, {\n        statusCode: 404,\n        statusMessage: `Extension with id ${extensionID} not found`,\n      })\n    }\n\n    if (!extension.hasExtensionPointTarget(requestedTarget)) {\n      return sendError(response, {\n        statusCode: 404,\n        statusMessage: `Extension with id ${extensionID} has not configured the \"${requestedTarget}\" extension point`,\n      })\n    }\n\n    const url = getExtensionPointRedirectUrl(requestedTarget, extension, devOptions)\n    if (!url) {\n      return sendError(response, {\n        statusCode: 404,\n        statusMessage: `Redirect url can't be constructed for extension with id ${extensionID} and extension point \"${requestedTarget}\"`,\n      })\n    }\n\n    await sendRedirect(response.event, url, 307)\n  }\n}\n\nfunction getWebsocketUrl(devOptions: GetExtensionsMiddlewareOptions['devOptions']) {\n  const socket = new URL('/extensions', devOptions.url)\n  socket.protocol = 'wss:'\n\n  return socket.toString()\n}\n"]}