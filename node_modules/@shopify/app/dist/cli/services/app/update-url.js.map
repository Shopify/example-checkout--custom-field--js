{"version":3,"file":"update-url.js","sourceRoot":"","sources":["../../../../src/cli/services/app/update-url.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,iBAAiB,CAAA;AACzC,OAAO,EAAC,OAAO,EAAgB,UAAU,EAAE,oBAAoB,EAAC,MAAM,gBAAgB,CAAA;AACtF,OAAO,EAAC,4BAA4B,EAAE,YAAY,EAAC,MAAM,6BAA6B,CAAA;AACtF,OAAO,EAAC,2BAA2B,EAAC,MAAM,+BAA+B,CAAA;AACzE,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAQtD,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,SAAS,CAAC,OAAyB;IAC/D,MAAM,KAAK,GAAG,MAAM,2BAA2B,EAAE,CAAA;IACjD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,SAAS,EAAE,CAAC,CAAC,MAAM,CAAA;IAC3D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC,YAAY,EAAC,CAAC,CAAA;IAC7G,MAAM,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;IACxC,WAAW,CAAC,OAAO,CAAC,CAAA;AACtB,CAAC;AAED,KAAK,UAAU,UAAU,CAAC,KAAa,EAAE,MAAc,EAAE,OAAyB;IAChF,MAAM,WAAW,GAAiB,MAAM,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC9D,MAAM,OAAO,GAAiB;QAC5B,cAAc,EAAE,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAClF,oBAAoB,EAClB,OAAO,CAAC,YAAY,IAAI,CAAC,MAAM,4BAA4B,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KAC3G,CAAA;IACD,oBAAoB,CAAC,OAAO,CAAC,CAAA;IAC7B,OAAO,OAAO,CAAA;AAChB,CAAC;AAED,SAAS,WAAW,CAAC,IAAkB;IACrC,aAAa,CAAC;QACZ,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;YACd,EAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC,EAAC,EAAC;YAChE,EAAC,KAAK,EAAE,4BAA4B,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAC,EAAC,EAAC;SACxF;KACF,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import {selectApp} from './select-app.js'\nimport {getURLs, PartnersURLs, updateURLs, validatePartnersURLs} from '../dev/urls.js'\nimport {allowedRedirectionURLsPrompt, appUrlPrompt} from '../../prompts/update-url.js'\nimport {ensureAuthenticatedPartners} from '@shopify/cli-kit/node/session'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\n\nexport interface UpdateURLOptions {\n  apiKey?: string\n  appURL?: string\n  redirectURLs?: string[]\n}\n\nexport default async function updateURL(options: UpdateURLOptions): Promise<void> {\n  const token = await ensureAuthenticatedPartners()\n  const apiKey = options.apiKey || (await selectApp()).apiKey\n  const newURLs = await getNewURLs(token, apiKey, {appURL: options.appURL, redirectURLs: options.redirectURLs})\n  await updateURLs(newURLs, apiKey, token)\n  printResult(newURLs)\n}\n\nasync function getNewURLs(token: string, apiKey: string, options: UpdateURLOptions): Promise<PartnersURLs> {\n  const currentURLs: PartnersURLs = await getURLs(apiKey, token)\n  const newURLs: PartnersURLs = {\n    applicationUrl: options.appURL || (await appUrlPrompt(currentURLs.applicationUrl)),\n    redirectUrlWhitelist:\n      options.redirectURLs || (await allowedRedirectionURLsPrompt(currentURLs.redirectUrlWhitelist.join(','))),\n  }\n  validatePartnersURLs(newURLs)\n  return newURLs\n}\n\nfunction printResult(urls: PartnersURLs): void {\n  renderSuccess({\n    headline: 'App URLs updated',\n    customSections: [\n      {title: 'App URL', body: {list: {items: [urls.applicationUrl]}}},\n      {title: 'Allowed redirection URL(s)', body: {list: {items: urls.redirectUrlWhitelist}}},\n    ],\n  })\n}\n"]}