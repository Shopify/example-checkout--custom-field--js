{"version":3,"file":"identifiers.js","sourceRoot":"","sources":["../../../../src/cli/services/context/identifiers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,kBAAkB,EAAC,MAAM,4BAA4B,CAAA;AAC7D,OAAO,EAAC,mBAAmB,EAAC,MAAM,6BAA6B,CAAA;AAG/D,OAAO,EAAC,8BAA8B,EAAC,MAAM,iBAAiB,CAAA;AAE9D,OAAO,EAAC,UAAU,EAAE,gBAAgB,EAAC,MAAM,6BAA6B,CAAA;AACxE,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,8BAA8B,CAAA;AA2BvE,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,OAA2C;IAC3F,qCAAqC;IACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE;QAAE,OAAO,EAAC,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAC,CAAA;IAE/F,MAAM,oBAAoB,GAAG,MAAM,8BAA8B,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,KAAK,EAAC,CAAC,CAAA;IAEhH,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,OAAO,EAAE,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IACpF,IAAI,MAAM,CAAC,KAAK,EAAE;QAAE,MAAM,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;IACnG,MAAM,SAAS,GAA0B,MAAM,CAAC,KAAK,CAAA;IAErD,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;IACtG,IAAI,UAAU,CAAC,KAAK,EAAE;QAAE,MAAM,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;IAE3G,OAAO;QACL,GAAG,EAAE,OAAO,CAAC,KAAK;QAClB,UAAU,EAAE,EAAC,GAAG,SAAS,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,UAAU,EAAC;QAC1D,YAAY,EAAE,UAAU,CAAC,KAAK,CAAC,YAAY;KAC5C,CAAA;AACH,CAAC;AAED,SAAS,cAAc,CAAC,SAAwB,EAAE,OAAe,EAAE,cAA8B;IAC/F,QAAQ,SAAS,EAAE;QACjB,KAAK,gBAAgB,CAAC;QACtB,KAAK,qBAAqB;YACxB,MAAM,IAAI,UAAU,CAClB,+EAA+E,OAAO,wBAAwB,EAC9G,gDACE,aAAa,CAAA,GAAG,WAAW,CAAC,iBAAiB,CAAC,cAAc,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,KACvF;;;gEAGwD,CACzD,CAAA;QACH,KAAK,gBAAgB;YACnB,MAAM,IAAI,gBAAgB,EAAE,CAAA;KAC/B;AACH,CAAC","sourcesContent":["import {ensureFunctionsIds} from './identifiers-functions.js'\nimport {ensureExtensionsIds} from './identifiers-extensions.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {Identifiers, IdentifiersExtensions} from '../../models/app/identifiers.js'\nimport {fetchAppExtensionRegistrations} from '../dev/fetch.js'\nimport {PackageManager} from '@shopify/cli-kit/node/node-package-manager'\nimport {AbortError, AbortSilentError} from '@shopify/cli-kit/node/error'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n\nexport interface EnsureDeploymentIdsPresenceOptions {\n  app: AppInterface\n  token: string\n  appId: string\n  appName: string\n  envIdentifiers: Partial<Identifiers>\n  force: boolean\n}\n\nexport interface RemoteSource {\n  uuid: string\n  type: string\n  id: string\n  title: string\n}\n\nexport interface LocalSource {\n  localIdentifier: string\n  graphQLType: string\n  type: string\n  configuration: {name: string}\n}\n\nexport type MatchingError = 'pending-remote' | 'invalid-environment' | 'user-cancelled'\n\nexport async function ensureDeploymentIdsPresence(options: EnsureDeploymentIdsPresenceOptions) {\n  // We need local extensions to deploy\n  if (!options.app.hasExtensions()) return {app: options.appId, extensions: {}, extensionIds: {}}\n\n  const remoteSpecifications = await fetchAppExtensionRegistrations({token: options.token, apiKey: options.appId})\n\n  const result = await ensureFunctionsIds(options, remoteSpecifications.app.functions)\n  if (result.isErr()) throw handleIdsError(result.error, options.appName, options.app.packageManager)\n  const functions: IdentifiersExtensions = result.value\n\n  const extensions = await ensureExtensionsIds(options, remoteSpecifications.app.extensionRegistrations)\n  if (extensions.isErr()) throw handleIdsError(extensions.error, options.appName, options.app.packageManager)\n\n  return {\n    app: options.appId,\n    extensions: {...functions, ...extensions.value.extensions},\n    extensionIds: extensions.value.extensionIds,\n  }\n}\n\nfunction handleIdsError(errorType: MatchingError, appName: string, packageManager: PackageManager) {\n  switch (errorType) {\n    case 'pending-remote':\n    case 'invalid-environment':\n      throw new AbortError(\n        `Deployment failed because this local project doesn't seem to match the app \"${appName}\" in Shopify Partners.`,\n        `If you didn't intend to select this app, run ${\n          outputContent`${outputToken.packagejsonScript(packageManager, 'deploy', '--reset')}`.value\n        }\nâ€¢ If this is the app you intended, check your local project and make sure\n  it contains the same number and types of extensions as the Shopify app\n  you've selected. You may need to generate missing extensions.`,\n      )\n    case 'user-cancelled':\n      throw new AbortSilentError()\n  }\n}\n"]}