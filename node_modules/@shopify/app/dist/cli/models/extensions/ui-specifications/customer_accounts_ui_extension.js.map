{"version":3,"file":"customer_accounts_ui_extension.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/ui-specifications/customer_accounts_ui_extension.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,8BAA8B,EAAC,MAAM,UAAU,CAAA;AACvD,OAAO,EAAC,qBAAqB,EAAC,MAAM,eAAe,CAAA;AACnD,OAAO,EAAC,iBAAiB,EAAC,MAAM,wDAAwD,CAAA;AACxF,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAChD,OAAO,EAAC,aAAa,EAAC,MAAM,8BAA8B,CAAA;AAE1D,MAAM,UAAU,GAAG,EAAC,IAAI,EAAE,+CAA+C,EAAE,OAAO,EAAE,SAAS,EAAC,CAAA;AAE9F,MAAM,sBAAsB,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAC1D,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9C,eAAe,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACnD,YAAY,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAClC,6BAA6B,EAAE,GAAG;SAC/B,MAAM,EAAE;SACR,GAAG,CAAC;QACH,OAAO,EAAE,uDAAuD;KACjE,CAAC;SACD,QAAQ,EAAE;IACb,iCAAiC,EAAE,GAAG;SACnC,KAAK,CACJ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;QACf,OAAO,EAAE,iEAAiE;KAC3E,CAAC,CACH;SACA,QAAQ,CAAC;QACR,OAAO,EACL,iHAAiH;KACpH,CAAC;SACD,QAAQ,EAAE;CACd,CAAC,CAAA;AAEF,MAAM,IAAI,GAAG,8BAA8B,CAAC;IAC1C,UAAU,EAAE,gCAAgC;IAC5C,OAAO,EAAE,mBAAmB;IAC5B,UAAU;IACV,qBAAqB,EAAE,gCAAgC;IACvD,MAAM,EAAE,sBAAsB;IAC9B,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE;QACxC,OAAO;YACL,gBAAgB,EAAE,MAAM,CAAC,eAAe;YACxC,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,YAAY,EAAE,MAAM,iBAAiB,CAAC,SAAS,EAAE,sBAAsB,CAAC;YACxE,gCAAgC,EAAE,MAAM,CAAC,6BAA6B;YACtE,oCAAoC,EAAE,MAAM,CAAC,iCAAiC;SAC/E,CAAA;IACH,CAAC;IACD,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE;QAC3C,MAAM,CAAC,SAAS,EAAE,GAAG,gBAAgB,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC7D,MAAM,WAAW,GAAG,GAAG,SAAS,YAAY,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAA;QACxE,MAAM,MAAM,GAAG,kBAAkB,CAAC,GAAG,IAAI,aAAa,CAAC,CAAA;QACvD,MAAM,SAAS,GAAG,WAAW,WAAW,kCAAkC,MAAM,gBAAgB,IAAI,EAAE,CAAA;QACtG,MAAM,MAAM,GAAG,eAAe,IAAI,2EAA2E,CAAA;QAC7G,OAAO,aAAa,CAAA,GAAG,MAAM,iBAAiB,SAAS,EAAE,CAAA;IAC3D,CAAC;CACF,CAAC,CAAA;AAEF,eAAe,IAAI,CAAA","sourcesContent":["import {createUIExtensionSpecification} from '../ui.js'\nimport {BaseUIExtensionSchema} from '../schemas.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {outputContent} from '@shopify/cli-kit/node/output'\n\nconst dependency = {name: '@shopify/customer-account-ui-extensions-react', version: '^0.0.20'}\n\nconst CustomerAccountsSchema = BaseUIExtensionSchema.extend({\n  categories: zod.array(zod.string()).optional(),\n  extensionPoints: zod.array(zod.string()).optional(),\n  localization: zod.any().optional(),\n  authenticatedRedirectStartUrl: zod\n    .string()\n    .url({\n      message: 'authenticated_redirect_start_url must be a valid URL.',\n    })\n    .optional(),\n  authenticatedRedirectRedirectUrls: zod\n    .array(\n      zod.string().url({\n        message: 'authenticated_redirect_redirect_urls does contain invalid URLs.',\n      }),\n    )\n    .nonempty({\n      message:\n        'authenticated_redirect_redirect_urls can not be an empty array! It may only contain one or multiple valid URLs.',\n    })\n    .optional(),\n})\n\nconst spec = createUIExtensionSpecification({\n  identifier: 'customer_accounts_ui_extension',\n  surface: 'customer_accounts',\n  dependency,\n  partnersWebIdentifier: 'customer_accounts_ui_extension',\n  schema: CustomerAccountsSchema,\n  deployConfig: async (config, directory) => {\n    return {\n      extension_points: config.extensionPoints,\n      name: config.name,\n      categories: config.categories,\n      localization: await loadLocalesConfig(directory, 'customer_accounts_ui'),\n      authenticated_redirect_start_url: config.authenticatedRedirectStartUrl,\n      authenticated_redirect_redirect_urls: config.authenticatedRedirectRedirectUrls,\n    }\n  },\n  previewMessage: (host, uuid, _, storeFqdn) => {\n    const [storeName, ...storeDomainParts] = storeFqdn.split('.')\n    const accountsUrl = `${storeName}.account.${storeDomainParts.join('.')}`\n    const origin = encodeURIComponent(`${host}/extensions`)\n    const publicURL = `https://${accountsUrl}/extensions-development?origin=${origin}&extensionId=${uuid}`\n    const notice = `Please open ${host} and click on 'Visit Site' and then close the tab to allow connections.\\n`\n    return outputContent`${notice}Preview link: ${publicURL}`\n  },\n})\n\nexport default spec\n"]}