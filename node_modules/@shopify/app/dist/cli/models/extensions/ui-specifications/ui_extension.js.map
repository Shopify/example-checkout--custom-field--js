{"version":3,"file":"ui_extension.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/ui-specifications/ui_extension.ts"],"names":[],"mappings":"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","sourcesContent":["import {createUIExtensionSpecification} from '../ui.js'\nimport {BaseUIExtensionSchema, NewExtensionPointSchemaType, NewExtensionPointsSchema} from '../schemas.js'\nimport {loadLocalesConfig} from '../../../utilities/extensions/locales-configuration.js'\nimport {configurationFileNames} from '../../../constants.js'\nimport {getExtensionPointTargetSurface} from '../../../services/dev/extension/utilities.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {err, ok, Result} from '@shopify/cli-kit/node/result'\nimport {fileExists} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n\nconst dependency = {name: '@shopify/checkout-ui-extensions-react', version: '^0.26.0'}\n\nconst UIExtensionSchema = BaseUIExtensionSchema.extend({\n  settings: zod\n    .object({\n      fields: zod.any().optional(),\n    })\n    .optional(),\n  extensionPoints: NewExtensionPointsSchema,\n})\n\nconst spec = createUIExtensionSpecification({\n  identifier: 'ui_extension',\n  surface: 'all',\n  dependency,\n  partnersWebIdentifier: 'ui_extension',\n  singleEntryPath: false,\n  schema: UIExtensionSchema,\n  validate: async (config, directory) => {\n    return validateUIExtensionPointConfig(directory, config.extensionPoints)\n  },\n  previewMessage(host, uuid, config, storeFqdn) {\n    const links = config.extensionPoints.map(\n      ({target}) => `${target} preview link: ${host}/extensions/${uuid}/${target}`,\n    )\n    return outputContent`${links.join('\\n')}`\n  },\n  deployConfig: async (config, directory) => {\n    return {\n      api_version: config.apiVersion,\n      extension_points: config.extensionPoints,\n      capabilities: config.capabilities,\n      name: config.name,\n      settings: config.settings,\n      localization: await loadLocalesConfig(directory, config.type),\n    }\n  },\n  getBundleExtensionStdinContent: (config) => {\n    return config.extensionPoints.map(({module}) => `import '${module}';`).join('\\n')\n  },\n  shouldFetchCartUrl: (config) => {\n    return (\n      config.extensionPoints.find((extensionPoint) => {\n        return getExtensionPointTargetSurface(extensionPoint.target) === 'checkout'\n      }) !== undefined\n    )\n  },\n  hasExtensionPointTarget: (config, requestedTarget) => {\n    return (\n      config.extensionPoints.find((extensionPoint) => {\n        return extensionPoint.target === requestedTarget\n      }) !== undefined\n    )\n  },\n})\n\nasync function validateUIExtensionPointConfig(\n  directory: string,\n  extensionPoints: NewExtensionPointSchemaType[],\n): Promise<Result<unknown, string>> {\n  const errors: string[] = []\n  const uniqueTargets: string[] = []\n  const duplicateTargets: string[] = []\n\n  for await (const {module, target} of extensionPoints) {\n    const fullPath = joinPath(directory, module)\n    const exists = await fileExists(fullPath)\n\n    if (!exists) {\n      const notFoundPath = outputToken.path(joinPath(directory, module))\n\n      errors.push(\n        outputContent`Couldn't find ${notFoundPath}\nPlease check the module path for ${target}`.value,\n      )\n    }\n\n    if (uniqueTargets.indexOf(target) === -1) {\n      uniqueTargets.push(target)\n    } else {\n      duplicateTargets.push(target)\n    }\n  }\n\n  if (duplicateTargets.length) {\n    errors.push(`Duplicate targets found: ${duplicateTargets.join(', ')}\\nExtension point targets must be unique`)\n  }\n\n  if (errors.length) {\n    const tomlPath = joinPath(directory, configurationFileNames.extension.ui)\n\n    errors.push(`Please check the configuration in ${tomlPath}`)\n    return err(errors.join('\\n\\n'))\n  }\n  return ok({})\n}\n\nexport default spec\n"]}