{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/dev.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AACvC,OAAO,GAAG,MAAM,uBAAuB,CAAA;AACvC,OAAO,OAAO,MAAM,gCAAgC,CAAA;AACpD,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,kBAAkB,EAAC,MAAM,oCAAoC,CAAA;AACrE,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,iBAAiB,EAAC,MAAM,gCAAgC,CAAA;AAEhE,MAAM,CAAC,OAAO,OAAO,GAAI,SAAQ,OAAO;IAgF/B,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAErC,MAAM,iBAAiB,CAAC,GAAG,EAAE,CAAC,CAAC;YAC7B,uCAAuC,EAAE,KAAK,CAAC,gCAAgC,CAAC;YAChF,kBAAkB,EAAE,KAAK,CAAC,KAAK;YAC/B,mBAAmB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;SACnE,CAAC,CAAC,CAAA;QAEH,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAA;QAEjC,MAAM,GAAG,CAAC;YACR,SAAS,EAAE,KAAK,CAAC,IAAI;YACrB,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC;YACxB,SAAS,EAAE,KAAK,CAAC,KAAK;YACtB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,MAAM,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;YAC3B,4BAA4B,EAAE,KAAK,CAAC,gCAAgC,CAAC;YACrE,aAAa;YACb,sBAAsB,EAAE,KAAK,CAAC,0BAA0B,CAAC;YACzD,eAAe,EAAE,KAAK,CAAC,mBAAmB,CAAC;YAC3C,SAAS,EAAE,KAAK,CAAC,YAAY,CAAC;YAC9B,cAAc,EAAE,KAAK,CAAC,MAAM;YAC5B,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC;YAC5B,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,kBAAkB,EAAE,KAAK,CAAC,0BAA0B,CAAC;SACtD,CAAC,CAAA;IACJ,CAAC;;;AA1GM,eAAW,GAAG,cAAc,CAAA;AAE5B,SAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,0BAA0B;KAChC,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,2EAA2E;QACxF,GAAG,EAAE,oBAAoB;QACzB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC;KAClD,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,oBAAoB;QACzB,OAAO,EAAE,KAAK;KACf,CAAC;IACF,gCAAgC,EAAE,KAAK,CAAC,OAAO,CAAC;QAC9C,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,yCAAyC;QACtD,GAAG,EAAE,6CAA6C;QAClD,OAAO,EAAE,KAAK;KACf,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC;QACzB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,+CAA+C;QAC5D,GAAG,EAAE,wBAAwB;QAC7B,OAAO,EAAE,KAAK;KACf,CAAC;IACF,0BAA0B,EAAE,KAAK,CAAC,MAAM,CAAC;QACvC,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,6EAA6E;QAC1F,GAAG,EAAE,uCAAuC;KAC7C,CAAC;IACF,mBAAmB,EAAE,KAAK,CAAC,MAAM,CAAC;QAChC,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,8FAA8F;QAC3G,GAAG,EAAE,gCAAgC;KACtC,CAAC;IACF,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC;QACzB,MAAM,EAAE,KAAK;QACb,WAAW,EACT,qGAAqG;QACvG,GAAG,EAAE,yBAAyB;QAC9B,SAAS,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;KACnC,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC;QACzB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,kGAAkG;QAC/G,GAAG,EAAE,wBAAwB;QAC7B,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC;KACpC,CAAC;IACF,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;QACnB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,4BAA4B;QACzC,GAAG,EAAE,qBAAqB;QAC1B,OAAO,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC;QAChC,SAAS,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;KACvC,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,yDAAyD;QACtE,GAAG,EAAE,oBAAoB;KAC1B,CAAC;IACF,0BAA0B,EAAE,KAAK,CAAC,OAAO,CAAC;QACxC,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,2DAA2D;QACxE,GAAG,EAAE,uCAAuC;KAC7C,CAAC;CACH,CAAA","sourcesContent":["import {appFlags} from '../../flags.js'\nimport dev from '../../services/dev.js'\nimport Command from '../../utilities/app-command.js'\nimport {Flags} from '@oclif/core'\nimport {normalizeStoreFqdn} from '@shopify/cli-kit/node/context/fqdn'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {addPublicMetadata} from '@shopify/cli-kit/node/metadata'\n\nexport default class Dev extends Command {\n  static description = 'Run the app.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: false,\n      description: 'The API key of your app.',\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n    }),\n    store: Flags.string({\n      hidden: false,\n      char: 's',\n      description: 'Store URL. Must be an existing development or Shopify Plus sandbox store.',\n      env: 'SHOPIFY_FLAG_STORE',\n      parse: async (input) => normalizeStoreFqdn(input),\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n    'skip-dependencies-installation': Flags.boolean({\n      hidden: false,\n      description: 'Skips the installation of dependencies.',\n      env: 'SHOPIFY_FLAG_SKIP_DEPENDENCIES_INSTALLATION',\n      default: false,\n    }),\n    'no-update': Flags.boolean({\n      hidden: false,\n      description: 'Skips the Partners Dashboard URL update step.',\n      env: 'SHOPIFY_FLAG_NO_UPDATE',\n      default: false,\n    }),\n    'subscription-product-url': Flags.string({\n      hidden: false,\n      description: 'Resource URL for subscription UI extension. Format: \"/products/{productId}\"',\n      env: 'SHOPIFY_FLAG_SUBSCRIPTION_PRODUCT_URL',\n    }),\n    'checkout-cart-url': Flags.string({\n      hidden: false,\n      description: 'Resource URL for checkout UI extension. Format: \"/cart/{productVariantID}:{productQuantity}\"',\n      env: 'SHOPIFY_FLAG_CHECKOUT_CART_URL',\n    }),\n    'tunnel-url': Flags.string({\n      hidden: false,\n      description:\n        'Use a custom tunnel, it must be running before executing dev. Format: \"https://my-tunnel-url:port\".',\n      env: 'SHOPIFY_FLAG_TUNNEL_URL',\n      exclusive: ['no-tunnel', 'tunnel'],\n    }),\n    'no-tunnel': Flags.boolean({\n      hidden: true,\n      description: 'Automatic creation of a tunnel is disabled. Service entry point will listen to localhost instead',\n      env: 'SHOPIFY_FLAG_NO_TUNNEL',\n      default: false,\n      exclusive: ['tunnel-url', 'tunnel'],\n    }),\n    tunnel: Flags.string({\n      hidden: true,\n      description: 'Select the tunnel provider',\n      env: 'SHOPIFY_FLAG_TUNNEL',\n      options: ['cloudflare', 'ngrok'],\n      exclusive: ['tunnel-url', 'no-tunnel'],\n    }),\n    theme: Flags.string({\n      hidden: false,\n      char: 't',\n      description: 'Theme ID or name of the theme app extension host theme.',\n      env: 'SHOPIFY_FLAG_THEME',\n    }),\n    'theme-app-extension-port': Flags.integer({\n      hidden: false,\n      description: 'Local port of the theme app extension development server.',\n      env: 'SHOPIFY_FLAG_THEME_APP_EXTENSION_PORT',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(Dev)\n\n    await addPublicMetadata(() => ({\n      cmd_app_dependency_installation_skipped: flags['skip-dependencies-installation'],\n      cmd_app_reset_used: flags.reset,\n      cmd_dev_tunnel_type: flags['tunnel-url'] ? 'custom' : flags.tunnel,\n    }))\n\n    const commandConfig = this.config\n\n    await dev({\n      directory: flags.path,\n      apiKey: flags['api-key'],\n      storeFqdn: flags.store,\n      reset: flags.reset,\n      update: !flags['no-update'],\n      skipDependenciesInstallation: flags['skip-dependencies-installation'],\n      commandConfig,\n      subscriptionProductUrl: flags['subscription-product-url'],\n      checkoutCartUrl: flags['checkout-cart-url'],\n      tunnelUrl: flags['tunnel-url'],\n      tunnelProvider: flags.tunnel,\n      noTunnel: flags['no-tunnel'],\n      theme: flags.theme,\n      themeExtensionPort: flags['theme-app-extension-port'],\n    })\n  }\n}\n"]}