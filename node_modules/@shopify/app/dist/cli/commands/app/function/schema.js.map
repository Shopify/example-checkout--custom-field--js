{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/function/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,qBAAqB,EAAC,MAAM,sCAAsC,CAAA;AAC1E,OAAO,EAAC,aAAa,EAAE,iBAAiB,EAAC,MAAM,sCAAsC,CAAA;AACrF,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,UAAU,EAAC,MAAM,8BAA8B,CAAA;AAEvD,MAAM,CAAC,OAAO,OAAO,WAAY,SAAQ,OAAO;IAcvC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;QACnD,MAAM,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE;YAC1E,UAAU,CAAC,MAAM,qBAAqB,CAAC,EAAC,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,CAAA;QAClG,CAAC,CAAC,CAAA;IACJ,CAAC;;AAlBM,uBAAW,GAAG,iDAAiD,CAAA;AAE/D,iBAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,aAAa;IAChB,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,uCAAuC;QACpD,QAAQ,EAAE,KAAK;QACf,GAAG,EAAE,0BAA0B;KAChC,CAAC;CACH,CAAA","sourcesContent":["import {generateSchemaService} from '../../../services/generate-schema.js'\nimport {functionFlags, inFunctionContext} from '../../../services/function/common.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {outputInfo} from '@shopify/cli-kit/node/output'\n\nexport default class FetchSchema extends Command {\n  static description = 'Fetch the latest GraphQL schema for a Function.'\n\n  static flags = {\n    ...globalFlags,\n    ...functionFlags,\n    'api-key': Flags.string({\n      name: 'API key',\n      description: 'The API key to fetch the schema with.',\n      required: false,\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags, args} = await this.parse(FetchSchema)\n    await inFunctionContext(this.config, flags.path, async (app, ourFunction) => {\n      outputInfo(await generateSchemaService({app, extension: ourFunction, apiKey: flags['api-key']}))\n    })\n  }\n}\n"]}