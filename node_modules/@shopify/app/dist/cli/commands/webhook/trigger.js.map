{"version":3,"file":"trigger.js","sourceRoot":"","sources":["../../../../src/cli/commands/webhook/trigger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAsB,MAAM,yCAAyC,CAAA;AAC5F,OAAO,EAAC,qBAAqB,EAAC,MAAM,mCAAmC,CAAA;AACvE,OAAO,EAAC,kCAAkC,EAAC,MAAM,kCAAkC,CAAA;AACnF,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAEtD,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,OAAO;IAqD1C,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;QAEhD,MAAM,SAAS,GAAwB;YACrC,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC;YAChC,cAAc,EAAE,KAAK,CAAC,iBAAiB,CAAC;YACxC,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,YAAY,EAAE,KAAK,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC;SAC/D,CAAA;QACD,IAAI,KAAK,CAAC,eAAe,CAAC,EAAE;YAC1B,aAAa,CAAC;gBACZ,QAAQ,EAAE;oBACR,sGAAsG;iBACvG;gBACD,IAAI,EAAE,CAAC,qCAAqC,CAAC;aAC9C,CAAC,CAAA;SACH;QAED,MAAM,qBAAqB,CAAC,SAAS,CAAC,CAAA;IACxC,CAAC;;AAxEM,0BAAW,GAAG,6EAA6E,CAAA;AAE3F,oBAAK,GAAG;IACb,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC;QACf,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,mBAAmB;QACxB,WAAW,EAAE,wHAAwH;KACtI,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,oBAAoB;QACzB,WAAW,EAAE,8BAA8B;KAC5C,CAAC;IACF,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC;QAC1B,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,0BAA0B;QAC/B,WAAW,EAAE,uCAAuC;KACrD,CAAC;IACF,iBAAiB,EAAE,KAAK,CAAC,MAAM,CAAC;QAC9B,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,OAAO,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC,WAAW,CAAC;QACpF,GAAG,EAAE,8BAA8B;QACnC,WAAW,EAAE,4FAA4F;KAC1G,CAAC;IACF,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;QAC5B,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,4BAA4B;QACjC,WAAW,EAAE,uCAAuC;KACrD,CAAC;IACF,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC;QAC5B,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,4BAA4B;QACjC,WAAW,EAAE,gKAAgK;KAC9K,CAAC;IACF,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,sBAAsB;QAC3B,WAAW,EAAE;;sBAEG,kCAAkC,CAAC,eAAe,CAAC,IAAI,CAAC;sBACxD,kCAAkC,CAAC,eAAe,CAAC,MAAM,CAAC;sBAC1D,kCAAkC,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;KAClF,CAAC;CACH,CAAA","sourcesContent":["import {DELIVERY_METHOD, WebhookTriggerFlags} from '../../services/webhook/trigger-flags.js'\nimport {webhookTriggerService} from '../../services/webhook/trigger.js'\nimport {deliveryMethodInstructionsAsString} from '../../prompts/webhook/trigger.js'\nimport {Flags} from '@oclif/core'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {renderWarning} from '@shopify/cli-kit/node/ui'\n\nexport default class WebhookTrigger extends Command {\n  static description = 'Trigger delivery of a sample webhook topic payload to a designated address.'\n\n  static flags = {\n    help: Flags.help({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_HELP',\n      description: `This help. When you run the trigger command the CLI will prompt you for any information that isn't passed using flags.`,\n    }),\n    topic: Flags.string({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_TOPIC',\n      description: 'The requested webhook topic.',\n    }),\n    'api-version': Flags.string({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_API_VERSION',\n      description: 'The API Version of the webhook topic.',\n    }),\n    'delivery-method': Flags.string({\n      required: false,\n      hidden: false,\n      options: [DELIVERY_METHOD.HTTP, DELIVERY_METHOD.PUBSUB, DELIVERY_METHOD.EVENTBRIDGE],\n      env: 'SHOPIFY_FLAG_DELIVERY_METHOD',\n      description: `Method chosen to deliver the topic payload. If not passed, it's inferred from the address.`,\n    }),\n    'shared-secret': Flags.string({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_SHARED_SECRET',\n      description: `Deprecated. Please use client-secret.`,\n    }),\n    'client-secret': Flags.string({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_CLIENT_SECRET',\n      description: `Your app's client secret. This secret allows us to return the X-Shopify-Hmac-SHA256 header that lets you validate the origin of the response that you receive.`,\n    }),\n    address: Flags.string({\n      required: false,\n      hidden: false,\n      env: 'SHOPIFY_FLAG_ADDRESS',\n      description: `The URL where the webhook payload should be sent.\n                    You will need a different address type for each delivery-method:\n                    ${deliveryMethodInstructionsAsString(DELIVERY_METHOD.HTTP)}\n                    ${deliveryMethodInstructionsAsString(DELIVERY_METHOD.PUBSUB)}\n                    ${deliveryMethodInstructionsAsString(DELIVERY_METHOD.EVENTBRIDGE)}`,\n    }),\n  }\n\n  public async run() {\n    const {flags} = await this.parse(WebhookTrigger)\n\n    const usedFlags: WebhookTriggerFlags = {\n      topic: flags.topic,\n      apiVersion: flags['api-version'],\n      deliveryMethod: flags['delivery-method'],\n      address: flags.address,\n      clientSecret: flags['client-secret'] || flags['shared-secret'],\n    }\n    if (flags['shared-secret']) {\n      renderWarning({\n        headline: [\n          'The flag shared-secret has been deprecated in favor of client-secret and will eventually be deleted.',\n        ],\n        body: ['Please use --client-secret instead.'],\n      })\n    }\n\n    await webhookTriggerService(usedFlags)\n  }\n}\n"]}