{"version":3,"file":"Banner.test.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/Banner.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAA;AAClC,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAA;AAC7C,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAC,MAAM,EAAC,MAAM,qBAAqB,CAAA;AAE1C,QAAQ,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;IAC5B,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,MAAM,IAAC,IAAI,EAAC,SAAS,GAAG,CAAC,CAAA;QAErD,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;KAMzC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,MAAM,IAAC,IAAI,EAAC,MAAM,GAAG,CAAC,CAAA;QAClD,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;KAMzC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,MAAM,IAAC,IAAI,EAAC,SAAS,GAAG,CAAC,CAAA;QACrD,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;KAMzC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,MAAM,IAAC,IAAI,EAAC,OAAO,GAAG,CAAC,CAAA;QACnD,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;KAMzC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,CAAC,oBAAC,MAAM,IAAC,IAAI,EAAC,gBAAgB,GAAG,CAAC,CAAA;QAE5D,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,qBAAqB,CAAC;;;;;;KAMzC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {Banner} from './Banner.js'\nimport {describe, expect, test} from 'vitest'\nimport React from 'react'\nimport {render} from 'ink-testing-library'\n\ndescribe('Banner', async () => {\n  test('renders with a border for success', async () => {\n    const {lastFrame} = render(<Banner type=\"success\" />)\n\n    expect(lastFrame()).toMatchInlineSnapshot(`\n      \"\u001b[32m╭─\u001b[39m success \u001b[32m────────────────────────────────────────────────────────────────────╮\u001b[39m\n      \u001b[32m│\u001b[39m                                                                              \u001b[32m│\u001b[39m\n      \u001b[32m│\u001b[39m                                                                              \u001b[32m│\u001b[39m\n      \u001b[32m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[39m\n      \"\n    `)\n  })\n\n  test('renders with a border for info', async () => {\n    const {lastFrame} = render(<Banner type=\"info\" />)\n    expect(lastFrame()).toMatchInlineSnapshot(`\n      \"\u001b[2m╭─\u001b[22m info \u001b[2m───────────────────────────────────────────────────────────────────────╮\u001b[22m\n      \u001b[2m│\u001b[22m                                                                              \u001b[2m│\u001b[22m\n      \u001b[2m│\u001b[22m                                                                              \u001b[2m│\u001b[22m\n      \u001b[2m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[22m\n      \"\n    `)\n  })\n\n  test('renders with a border for warning', async () => {\n    const {lastFrame} = render(<Banner type=\"warning\" />)\n    expect(lastFrame()).toMatchInlineSnapshot(`\n      \"\u001b[33m╭─\u001b[39m warning \u001b[33m────────────────────────────────────────────────────────────────────╮\u001b[39m\n      \u001b[33m│\u001b[39m                                                                              \u001b[33m│\u001b[39m\n      \u001b[33m│\u001b[39m                                                                              \u001b[33m│\u001b[39m\n      \u001b[33m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[39m\n      \"\n    `)\n  })\n\n  test('renders with a border for error', async () => {\n    const {lastFrame} = render(<Banner type=\"error\" />)\n    expect(lastFrame()).toMatchInlineSnapshot(`\n      \"\u001b[31m╭─\u001b[39m error \u001b[31m──────────────────────────────────────────────────────────────────────╮\u001b[39m\n      \u001b[31m│\u001b[39m                                                                              \u001b[31m│\u001b[39m\n      \u001b[31m│\u001b[39m                                                                              \u001b[31m│\u001b[39m\n      \u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[39m\n      \"\n    `)\n  })\n\n  test('renders with a top and bottom lines only for external errors', async () => {\n    const {lastFrame} = render(<Banner type=\"external_error\" />)\n\n    expect(lastFrame()).toMatchInlineSnapshot(`\n      \"\u001b[31m──\u001b[39m external error \u001b[31m──────────────────────────────────────────────────────────────\u001b[39m\n\n\n      \u001b[31m────────────────────────────────────────────────────────────────────────────────\u001b[39m\n      \"\n    `)\n  })\n})\n"]}