{"version":3,"file":"framework.js","sourceRoot":"","sources":["../../../src/public/node/framework.ts"],"names":[],"mappings":"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","sourcesContent":["import {joinPath} from './path.js'\nimport {existsSync, readFileSync} from 'fs'\n\ninterface FrameworkDetectionPattern {\n  /**\n   * @example A file path\n   * ```\n   * \"package.json\"\n   * ```\n   */\n  path: string\n  /**\n   * @example A matcher\n   * ```\n   * \"\\\"(dev)?(d|D)ependencies\\\":\\\\s*{[^}]*\\\"next\\\":\\\\s*\\\".+?\\\"[^}]*}\"\n   * ```\n   */\n  matchContent?: string\n}\n\ninterface Framework {\n  /**\n   * Name of the framework\n   * @example \"nextjs\"\n   */\n  name: string\n\n  /**\n   * Detectors used to find out the framework\n   */\n  detectors: {\n    /**\n     * Collection of detectors that must be matched for the framework\n     * to be detected.\n     */\n    every?: FrameworkDetectionPattern[]\n    /**\n     * Collection of detectors where one match triggers the framework\n     * to be detected.\n     */\n    some?: FrameworkDetectionPattern[]\n  }\n}\n\nconst frameworks: Framework[] = [\n  {\n    name: 'remix',\n    detectors: {\n      every: [\n        {\n          path: 'package.json',\n          matchContent: '\"(dev)?(d|D)ependencies\":\\\\s*{[^}]*\"@remix-run\\\\/.*\":\\\\s*\".+?\"[^}]*}',\n        },\n        {\n          path: 'package.json',\n          matchContent: '\"(dev)?(d|D)ependencies\":\\\\s*{[^}]*\"react\":\\\\s*\".+?\"[^}]*}',\n        },\n      ],\n    },\n  },\n  {\n    name: 'nextjs',\n    detectors: {\n      every: [\n        {\n          path: 'package.json',\n          matchContent: '\"(dev)?(d|D)ependencies\":\\\\s*{[^}]*\"next\":\\\\s*\".+?\"[^}]*}',\n        },\n        {\n          path: 'package.json',\n          matchContent: '\"(dev)?(d|D)ependencies\":\\\\s*{[^}]*\"react\":\\\\s*\".+?\"[^}]*}',\n        },\n      ],\n    },\n  },\n  {\n    name: 'express',\n    detectors: {\n      every: [\n        {\n          path: 'package.json',\n          matchContent: '\"(dev)?(d|D)ependencies\":\\\\s*{[^}]*\"express\":\\\\s*\".+?\"[^}]*}',\n        },\n      ],\n    },\n  },\n  {\n    name: 'rails',\n    detectors: {\n      every: [\n        {\n          path: 'Gemfile',\n          matchContent: 'gem \"rails\"',\n        },\n      ],\n    },\n  },\n  {\n    name: 'flask',\n    detectors: {\n      every: [\n        {\n          path: 'Pipfile',\n          matchContent: 'flask',\n        },\n      ],\n    },\n  },\n  {\n    name: 'django',\n    detectors: {\n      every: [\n        {\n          path: 'Pipfile',\n          matchContent: 'django',\n        },\n      ],\n    },\n  },\n  {\n    name: 'laravel',\n    detectors: {\n      every: [\n        {\n          path: 'composer.json',\n          matchContent: '\"require\":\\\\s*{[^}]*\"laravel/framework\":\\\\s*\".+?\"[^}]*}',\n        },\n      ],\n    },\n  },\n  {\n    name: 'symfony',\n    detectors: {\n      every: [\n        {\n          path: 'composer.json',\n          matchContent: '\"require\":\\\\s*{[^}]*\"symfony\\\\/.*\":\\\\s*\".+?\"[^}]*}',\n        },\n      ],\n    },\n  },\n]\n\n/**\n * Tries to identify the using of a framework analyzing the existence and/or content of different files inside a\n * specific directory.\n *\n * @param rootDirectory - Directory from which the files required for each framework are searched\n * @returns The name of the framework used or 'unknown' otherwise\n */\nexport async function resolveFramework(rootDirectory: string): Promise<string> {\n  const fwConfigFiles: {[key: string]: string | undefined} = {}\n\n  const matchedFramework = frameworks.find(\n    (framework) =>\n      (!framework.detectors?.some ||\n        framework.detectors?.some?.reduce(\n          (_previousDetectorsMatch: boolean, detector) =>\n            matchDetector(detector, loadFwConfigFile(rootDirectory, detector.path, fwConfigFiles)),\n          false,\n        )) &&\n      (!framework.detectors?.every ||\n        framework.detectors?.every?.reduce(\n          (previousDetectorsMatch: boolean, detector) =>\n            previousDetectorsMatch\n              ? matchDetector(detector, loadFwConfigFile(rootDirectory, detector.path, fwConfigFiles))\n              : false,\n          true,\n        )),\n  )\n\n  return matchedFramework ? matchedFramework.name : 'unknown'\n}\n\nfunction matchDetector(detector: FrameworkDetectionPattern, fwConfigFiles: {[key: string]: string | undefined} = {}) {\n  if (!fwConfigFiles[detector.path]) return false\n\n  return !detector.matchContent || new RegExp(detector.matchContent).test(fwConfigFiles[detector.path]!)\n}\n\nfunction loadFwConfigFile(\n  rootPath: string,\n  fwConfigFileName: string,\n  fwConfigFiles: {[key: string]: string | undefined} = {},\n) {\n  if (fwConfigFiles[fwConfigFileName]) {\n    return fwConfigFiles\n  }\n\n  const fwConfigFilePath = joinPath(rootPath, fwConfigFileName)\n  if (!existsSync(fwConfigFilePath)) {\n    return fwConfigFiles\n  }\n\n  const rawContent = readFileSync(fwConfigFilePath, {encoding: 'utf8'})\n\n  fwConfigFiles[fwConfigFileName] = rawContent\n  return fwConfigFiles\n}\n"]}