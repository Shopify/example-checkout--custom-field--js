"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migrationList = void 0;
var tslib_1 = require("tslib");
var shopify_app_session_storage_1 = require("@shopify/shopify-app-session-storage");
exports.migrationList = [
    new shopify_app_session_storage_1.MigrationOperation('migrateScopeFieldToVarchar1024', migrateScopeFieldToVarchar1024),
];
// need to migrate exisiting scope from varchar 255 to varchar 1024
function migrateScopeFieldToVarchar1024(connection) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var tempTableName, rename, newTable, insert, drop;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    tempTableName = "".concat(connection.sessionStorageIdentifier, "_for_migrateScopeFieldToVarchar1024");
                    return [4 /*yield*/, connection.executeRawQuery('BEGIN')];
                case 1:
                    _a.sent();
                    rename = "\n    ALTER TABLE ".concat(connection.sessionStorageIdentifier, " RENAME TO ").concat(tempTableName, ";\n  ");
                    return [4 /*yield*/, connection.query(rename)];
                case 2:
                    _a.sent();
                    newTable = "\n        CREATE TABLE ".concat(connection.sessionStorageIdentifier, " (\n          id varchar(255) NOT NULL PRIMARY KEY,\n          shop varchar(255) NOT NULL,\n          state varchar(255) NOT NULL,\n          isOnline integer NOT NULL,\n          expires integer,\n          scope varchar(1024),\n          accessToken varchar(255),\n          onlineAccessInfo varchar(255)\n        );\n      ");
                    return [4 /*yield*/, connection.query(newTable)];
                case 3:
                    _a.sent();
                    insert = "\n    INSERT INTO ".concat(connection.sessionStorageIdentifier, " (id,shop,state,isOnline,expires,scope,accessToken,onlineAccessInfo)\n      SELECT id,shop,state,isOnline,expires,scope,accessToken,onlineAccessInfo\n      FROM ").concat(tempTableName, ";\n  ");
                    return [4 /*yield*/, connection.query(insert)];
                case 4:
                    _a.sent();
                    drop = "DROP TABLE ".concat(tempTableName, ";");
                    return [4 /*yield*/, connection.query(drop)];
                case 5:
                    _a.sent();
                    return [4 /*yield*/, connection.executeRawQuery('COMMIT')];
                case 6:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=migrations.js.map